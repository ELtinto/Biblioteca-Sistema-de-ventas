/// aca popngo el nombre de mi paquete //// 
package formularioprincipal;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import conexionSQL.conexionSQL;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;


/**
 *
 * @author Pc gamer
 */

/// creo la primera calse LLAMADA LIBRO ///
public class libros extends javax.swing.JInternalFrame {

   conexionSQL cc=new conexionSQL();
   Connection con=cc.conexion();
    
    
    
    
    
    public libros() {
        initComponents();
        mostrarDatos();
        
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        cbCategoria = new javax.swing.JComboBox<>();
        cbEstado = new javax.swing.JComboBox<>();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaLibros = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("REGISTRO DE LIBROS");

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));

        jLabel1.setText("Nombre Libro");

        jLabel2.setText("Categoria");

        jLabel3.setText("Estado");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        cbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Accion", "Terror", "Dramatico", "Lirico", "Literario", "Novela", "Aventura", "Biografia", "Didactico", " ", " " }));
        cbCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCategoriaActionPerformed(evt);
            }
        });

        cbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Disponible", "No Disponible" }));
        cbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEstadoActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNuevo)
                .addGap(18, 18, 18)
                .addComponent(btnGuardar)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnActualizar)
                .addGap(26, 26, 26))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtNombre)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar)
                    .addComponent(btnNuevo))
                .addGap(26, 26, 26))
        );

        tablaLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaLibrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaLibros);

        jLabel4.setText("Busqueda");

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //IDENTIFICO Y NOMBRO LOS NOMBRES DE MI INTERFAZ GRAFICA /(///
    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void cbCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCategoriaActionPerformed

    private void cbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbEstadoActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        
     
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        insertarDatos();
        limpiarCajas();
        mostrarDatos();
        
   
    }//GEN-LAST:event_btnGuardarActionPerformed
public void mostrarDatos(){
 // MUESTRO LOS DATOS DE LOS REGISTROS ///    
    
    String[] titulos={"ID","Nombre Libro","Categoria","Estado"};
    String[] registros=new  String[5];
    
    DefaultTableModel modelo=new DefaultTableModel(null,titulos);
    
    
    String SQL="select * from libros";
    
    try {
        
        
        Statement st=(Statement) con.createStatement();
        ResultSet rs=st.executeQuery(SQL);
        
        while (rs.next()){
            
            
        registros[0]=rs.getString("idlibros");
        registros[1]=rs.getString("nombre");
        registros[2]=rs.getString("categoria");
        registros[3]=rs.getString("estado");
        
        
        
      modelo.addRow(registros);
        
         
        }
        
        tablaLibros.setModel(modelo);
    } catch  (Exception e)  {
        
        JOptionPane.showMessageDialog(null,"Error al mostrar Datos"+ e.getMessage());
    }
       
}

public void filtrarDatos(String valor){
    // ACA INGRESO EL FILTRO DE LA BARRA BUSCAR /// 
    
    
    String[] titulos={"ID","Nombre Libro","Categoria","Estado"};
    String[] registros=new  String[5];
    
    DefaultTableModel modelo=new DefaultTableModel(null,titulos);
    
    
    String SQL="select * from libros where nombre like '%"+valor+"%'";
    
    try {
        
        
        Statement st=(Statement) con.createStatement();
        ResultSet rs=st.executeQuery(SQL);
        
        while (rs.next()){
            
            
        registros[0]=rs.getString("idlibros");
        registros[1]=rs.getString("nombre");
        registros[2]=rs.getString("categoria");
        registros[3]=rs.getString("estado");
        
        
        
      modelo.addRow(registros);
        
         
        }
        
        tablaLibros.setModel(modelo);
    } catch  (Exception e)  {
        
        JOptionPane.showMessageDialog(null,"Error al mostrar Datos"+ e.getMessage());
    }
       
}

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarCajas();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tablaLibrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaLibrosMouseClicked
        
        int filaSeleccionada=tablaLibros.rowAtPoint(evt.getPoint());
        
        txtNombre.setText(tablaLibros.getValueAt(filaSeleccionada,1).toString());
        cbCategoria.setSelectedItem(tablaLibros.getValueAt(filaSeleccionada,2).toString());
        cbEstado.setSelectedItem(tablaLibros.getValueAt(filaSeleccionada,3).toString());
        
        
    }//GEN-LAST:event_tablaLibrosMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        ActualizarDatos();
        limpiarCajas();
        mostrarDatos();
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarRegistros();
        mostrarDatos();
        limpiarCajas();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        filtrarDatos(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    // con esto elimino los registros ///
    public void eliminarRegistros(){
        
        int filaSeleccionada=tablaLibros.getSelectedRow();
        
        try {
            String SQL="delete from Libros where idlibros="+tablaLibros.getValueAt(filaSeleccionada,0);
            
            
            Statement st=(Statement) con.createStatement();
            
            int n=st.executeUpdate(SQL);
            
            
            if (n>=0) {
                JOptionPane.showMessageDialog(null,"Registro Eliminado");
                
            }
             
        } catch (Exception e) {
                JOptionPane.showMessageDialog(null,"Error al eliminar registro"+e.getMessage());
                    
        }
         
    }
        
 
    
public void limpiarCajas(){
    // ACA INGRESO EL CODIGO PARA LIMPIAR LAS  CAJAS LUEGO DE UN INGRESO DE DATOS ///
    
    /// reliazo luego de caDa registro los espacios vuleva blanco otra vez 
    txtNombre.setText("");
    cbCategoria.setSelectedItem(null);
    cbEstado.setSelectedItem(null);
    
}    






     // con esto actualizamos los datos /// segun la tabla CUAL QUIERO MOSTRAR //
    public void ActualizarDatos(){
    
        try {
            
            String SQL=" update libros set nombre=?,categoria=?,estado=? where idlibros=? ";
            
            
            int filaSeleccionado=tablaLibros.getSelectedRow();
            String dao=(String)tablaLibros.getValueAt(filaSeleccionado, 0);
            
            PreparedStatement pst=(PreparedStatement) con.clientPrepareStatement(SQL);
            
            
            //nombre de libro//
            pst.setString(1,txtNombre.getText());
            
            // categoria //
            int seleccionado=cbCategoria.getSelectedIndex();
            pst.setString(2,cbCategoria.getItemAt(seleccionado));
            
            
            // estado del libro// 
           int seleccionadoo=cbEstado.getSelectedIndex();
           pst.setString(3,cbEstado.getItemAt(seleccionadoo));
           
           
           
           pst.setString(4, dao);
           pst.execute();
           
           JOptionPane.showMessageDialog(null,"Registro editado con exito");
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error de edicion" +e.getMessage());
        }
        
        
    }
    
     // ingreso de datos en la pantalla pricipal//
    public void insertarDatos(){
    
        try {
            
            String SQL="insert into libros (nombre,categoria,estado) values (?,?,?)";
            
            PreparedStatement pst=(PreparedStatement) con.clientPrepareStatement(SQL);
            
            
            //nombre de libro//
            pst.setString(1,txtNombre.getText());
            
            // categoria //
            int seleccionado=cbCategoria.getSelectedIndex();
            pst.setString(2,cbCategoria.getItemAt(seleccionado));
            
            
            // estado del libro// 
           int seleccionadoo=cbEstado.getSelectedIndex();
           pst.setString(3,cbEstado.getItemAt(seleccionadoo));
           
           
           pst.execute();
           
           JOptionPane.showMessageDialog(null,"registro exitoso");
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error de registro" +e.getMessage());
        }
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cbCategoria;
    private javax.swing.JComboBox<String> cbEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaLibros;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

  
   
}
